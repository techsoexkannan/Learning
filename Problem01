/*Given an array of positive numbers and a positive number ‘k,’ find the maximum sum of any contiguous subarray of size ‘k’.

Example 1:
Input: [2, 1, 5, 1, 3, 2], k=3 
Output: 9
Explanation: Subarray with maximum sum is [5, 1, 3].
*/
package com.check;

import java.util.Scanner;

public class October09_01 {
	
	public void calculate(int max,Integer[] arr)
	{
		Scanner sc=new Scanner(System.in);
		System.out.println("Here is the array entered::");
		for(int i=0;i<max;i++)
		{
			System.out.println(arr[i]);
		}
		System.out.println("Enter the size of window");
		int len=sc.nextInt();
		
		int sum=0;
		int finalresult=0;
		//Calculation logic 
		for(int i=0;i<(max-len);i++)
		{
			sum=0;
			for(int j=i;j<i+len;j++)
			{
				sum=sum+arr[j];
			}
			finalresult=Math.max(finalresult,sum);
			
		}
		System.out.println("The max is "+finalresult);
		
		
	}
	
	
	
	public static void main(String[] args)
	{

		int max=0;
		Integer arr[]=new Integer[10];
		Scanner sc= new Scanner(System.in);
		
		System.out.println("Enter the total number of elements ");
		max=sc.nextInt();
		
		for(int i=0;i<max;i++)
		{		
			System.out.println("Enter the "+i+"th number");

			arr[i]= sc.nextInt();
		}
		
		October09_01 obj=new October09_01();
		obj.calculate(max, arr);
	}

}
